#include <iostream>
#include <vector>
using namespace std;

vector<double> thomasAlgorithm(vector<vector<double>>& A, vector<double>& b) {
    int n = b.size();
    vector<double> c(n-1), d(n);

    c[0] = A[0][1] / A[0][0];
    d[0] = b[0] / A[0][0];
    for (int i = 1; i < n - 1; ++i) {
        double m = 1.0 / (A[i][i] - A[i][i-1] * c[i-1]);
        c[i] = A[i][i+1] * m;
        d[i] = (b[i] - A[i][i-1] * d[i-1]) * m;
    }

    d[n-1] = (b[n-1] - A[n-1][n-2] * d[n-2]) / (A[n-1][n-1]);
    vector<double> x(n);
    x[n-1] = d[n-1];
    for (int i = n - 2; i >= 0; --i) {
        x[i] = d[i] - c[i] * x[i+1];
    }

    return x;
}

int main() {
    vector<vector<double>> A = {
        {-1, -1, 0, 0, 0},
        {7, -17, -8, 0, 0},
        {0, -9, 19, 8, 0},
        {0, 0, 7, 20, 4},
        {0, 0, 0, -4, 12}
    };

    vector<double> b = {-4, 132, -59, -193, -40};

    vector<double> solution = thomasAlgorithm(A, b);

    cout << "Решение: ";
    for (double val : solution) {
        cout << val << " ";
    }
    cout << endl;

    return 0;
}
